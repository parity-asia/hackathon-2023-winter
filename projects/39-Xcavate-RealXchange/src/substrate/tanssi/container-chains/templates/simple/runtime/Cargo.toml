[package]
name = "container-chain-template-simple-runtime"
authors = { workspace = true }
description = "Simple container chain template runtime"
edition = "2021"
license = "GPL-3.0-only"
version = "0.1.0"

[package.metadata.docs.rs]
targets = ["x86_64-unknown-linux-gnu"]

[dependencies]
hex-literal = { workspace = true, optional = true }
log = { workspace = true }
parity-scale-codec = { workspace = true, features = ["derive"] }
scale-info = { workspace = true, features = ["derive"] }
serde = { workspace = true, optional = true, features = ["derive"] }
smallvec = { workspace = true }

# Local
pallet-cc-authorities-noting = { workspace = true }
tp-consensus = { workspace = true }

# Custom pallets
pallet-community-loan-pool = { workspace = true }
pallet-xcavate-staking = { workspace = true }
pallet-nft-marketplace = { workspace = true }
pallet-community-projects = { workspace = true }
pallet-whitelist = { workspace = true }
pallet-template = {workspace = true}

# Moonkit
nimbus-primitives = { workspace = true }
pallet-author-inherent = { workspace = true }
pallet-maintenance-mode = { workspace = true, features = ["xcm-support"] }
pallet-migrations = { workspace = true }
xcm-primitives = { workspace = true }

# Substrate
frame-executive = { workspace = true }
frame-support = { workspace = true }
frame-system = { workspace = true }
frame-system-rpc-runtime-api = { workspace = true }
pallet-balances = { workspace = true }
pallet-session = { workspace = true }
pallet-sudo = { workspace = true }
pallet-timestamp = { workspace = true }
pallet-transaction-payment = { workspace = true }
pallet-transaction-payment-rpc-runtime-api = { workspace = true }
pallet-utility = { workspace = true }

pallet-assets = { workspace = true }
pallet-nfts = { workspace = true }
pallet-uniques = { workspace = true }
node-primitives = { workspace = true }
pallet-collective = { workspace = true }
pallet-child-bounties = { workspace = true }
pallet-bounties = { workspace = true }
pallet-treasury = { workspace = true }
pallet-acurast-fulfillment-receiver = { workspace = true }
acurast-p256-crypto = { workspace = true }
pallet-insecure-randomness-collective-flip = { workspace = true }

pallet-proxy = { workspace = true }
sp-api = { workspace = true }
sp-block-builder = { workspace = true }
sp-consensus-aura = { workspace = true }
sp-core = { workspace = true }
sp-debug-derive = { workspace = true }
sp-inherents = { workspace = true }
sp-offchain = { workspace = true }
sp-runtime = { workspace = true }
sp-session = { workspace = true }
sp-std = { workspace = true }
sp-transaction-pool = { workspace = true }
sp-trie = { workspace = true }

sp-version = { workspace = true }

# Polkadot
pallet-xcm = { workspace = true }
polkadot-parachain-primitives = { workspace = true }
polkadot-runtime-common = { workspace = true }
staging-xcm = { workspace = true }
staging-xcm-builder = { workspace = true }
staging-xcm-executor = { workspace = true }

# Cumulus
cumulus-pallet-dmp-queue = { workspace = true }
cumulus-pallet-parachain-system = { workspace = true }
cumulus-pallet-session-benchmarking = { workspace = true }
cumulus-pallet-xcm = { workspace = true }
cumulus-pallet-xcmp-queue = { workspace = true }
cumulus-primitives-core = { workspace = true }
cumulus-primitives-timestamp = { workspace = true }
cumulus-primitives-utility = { workspace = true }
parachain-info = { workspace = true }

# Benchmarking
frame-benchmarking = { workspace = true, optional = true }
frame-system-benchmarking = { workspace = true, optional = true }
frame-try-runtime = { workspace = true, optional = true }
[build-dependencies]
substrate-wasm-builder = { workspace = true }

[features]
std = [
	"cumulus-pallet-dmp-queue/std",
	"cumulus-pallet-parachain-system/std",
	"cumulus-pallet-xcm/std",
	"cumulus-pallet-xcmp-queue/std",
	"cumulus-primitives-core/std",
	"cumulus-primitives-timestamp/std",
	"cumulus-primitives-utility/std",
	"frame-executive/std",
	"frame-support/std",
	"frame-system-rpc-runtime-api/std",
	"frame-system/std",
	"frame-try-runtime/std",
	"log/std",
	"nimbus-primitives/std",
	"pallet-author-inherent/std",
	"pallet-balances/std",
	"pallet-cc-authorities-noting/std",
	"pallet-maintenance-mode/std",
	"pallet-migrations/std",
	"pallet-proxy/std",
	"pallet-session/std",
	"pallet-sudo/std",
	"pallet-timestamp/std",
	"pallet-transaction-payment-rpc-runtime-api/std",
	"pallet-utility/std",
	"pallet-xcm/std",
	"pallet-nfts/std",
	"pallet-uniques/std",
	"pallet-assets/std",
	"pallet-community-loan-pool/std",
	"pallet-xcavate-staking/std",
	"pallet-whitelist/std",
	"pallet-nft-marketplace/std",
	"pallet-community-projects/std",
	"pallet-template/std",
	"pallet-collective/std",
	"pallet-child-bounties/std",
	"pallet-bounties/std",
	"pallet-treasury/std",
	"pallet-acurast-fulfillment-receiver/std",
	"acurast-p256-crypto/std",
	"pallet-insecure-randomness-collective-flip/std",
	"node-primitives/std",
	"parachain-info/std",
	"parity-scale-codec/std",
	"polkadot-parachain-primitives/std",
	"polkadot-runtime-common/std",
	"scale-info/std",
	"serde",
	"sp-api/std",
	"sp-block-builder/std",
	"sp-consensus-aura/std",
	"sp-core/std",
	"sp-inherents/std",
	"sp-offchain/std",
	"sp-runtime/std",
	"sp-std/std",
	"sp-transaction-pool/std",
	"sp-version/std",
	"tp-consensus/std",
	"staging-xcm-builder/std",
	"staging-xcm-executor/std",
	"staging-xcm/std",
	"xcm-primitives/std",
]

# Allow to print logs details (no wasm:stripped)
force-debug = ["sp-debug-derive/force-debug"]

runtime-benchmarks = [
	"cumulus-pallet-session-benchmarking/runtime-benchmarks",
	"frame-benchmarking",
	"frame-support/runtime-benchmarks",
	"frame-system-benchmarking/runtime-benchmarks",
	"frame-system/runtime-benchmarks",
	"hex-literal",
	"pallet-balances/runtime-benchmarks",
	"pallet-cc-authorities-noting/runtime-benchmarks",
	"pallet-timestamp/runtime-benchmarks",
	"pallet-xcm/runtime-benchmarks",
	"pallet-nfts/runtime-benchmarks",
	"pallet-uniques/runtime-benchmarks",
	"pallet-assets/runtime-benchmarks",
	"pallet-community-loan-pool/runtime-benchmarks",
	"pallet-xcavate-staking/runtime-benchmarks",
	"pallet-whitelist/runtime-benchmarks",
	"pallet-nft-marketplace/runtime-benchmarks",
	"pallet-template/runtime-benchmarks",
	"pallet-collective/runtime-benchmarks",
	"pallet-child-bounties/runtime-benchmarks",
	"pallet-bounties/runtime-benchmarks",
	"pallet-treasury/runtime-benchmarks",
	"sp-runtime/runtime-benchmarks",
	"staging-xcm-builder/runtime-benchmarks",
]

try-runtime = [
	"cumulus-pallet-parachain-system/try-runtime",
	"frame-executive/try-runtime",
	"frame-support/try-runtime",
	"frame-system/try-runtime",
	"frame-try-runtime",
	"nimbus-primitives/try-runtime",
	"pallet-balances/try-runtime",
	"pallet-cc-authorities-noting/try-runtime",
	"pallet-session/try-runtime",
	"pallet-sudo/try-runtime",
	"pallet-timestamp/try-runtime",
	"pallet-utility/try-runtime",
	"pallet-nfts/try-runtime",
	"pallet-uniques/try-runtime",
	"pallet-assets/try-runtime",
	"pallet-proxy/try-runtime",
	"pallet-community-loan-pool/try-runtime",
	"pallet-xcavate-staking/try-runtime",
	"pallet-whitelist/try-runtime",
	"pallet-nft-marketplace/try-runtime",
	"pallet-template/try-runtime",
	"pallet-collective/try-runtime",
	"pallet-child-bounties/try-runtime",
	"pallet-bounties/try-runtime",
	"pallet-treasury/try-runtime",
	"pallet-insecure-randomness-collective-flip/try-runtime",
	"parachain-info/try-runtime",
	"polkadot-runtime-common/try-runtime",
	"sp-runtime/try-runtime",
]
